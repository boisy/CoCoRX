* CoCoRX BY Robert Gault
* MEMORY TEST PROGRAM FOR UP TO 8MEG COCO PER PAUL T. BARTON
* MOST OF THE BASE 512K MEMORY IS TESTED, >$6C000 EXCLUDED
* Intended for a ROM PAK. Runs with any Coco 1,2, or 3.


R1MB	EQU	1		TOGGLE FOR 1MB VID
R2MB	EQU	2		TOGGLE FOR 2MB VID
V4MB	EQU	4		TOGGLE FOR 4MB VIDEO
V8MB	EQU	8		TOGGLE FOR 8MB VIDEO
R4MB	EQU	16		TOGGLE FOR 4MB MEMORY
R8MB	EQU	32		TOGGLE FOR 8MB MEMORY

        SECTION ramdoctor
RAMDoctor
        lda     #$60
        lbsr    ClearScreen
	LDX	$FFFE
	CMPX	#$8C1B
	LBEQ	COCO3
	STA	FASTC1
	LEAX	MSGA,PCR	Coco1
        ldy     #0000
	LBSR	PrintStringAt
G@	LEAX	PC1,PCR
	LDY	#$E00
A@	LDD	,X++
	STD	,Y++
	CMPX	PC1E,PCR
	BLO	A@
	LBRA	$E00

PC1	LEAY	MEMTBL,PCR	Test for 4K, 16K, 32K
	CLRB
A@	LDX	,Y++	get an address
	INCB
	STB	AMNT2,PCR
	LDA	,X	get the byte
	COM	,X	Change what might be ROM
	CMPA	,X	did it change?
	BNE	A@	Go if RAM
	LEAX	-1,X
	STX	ADDR,PCR
	CMPX	#$7FFF
	BNE	TSTING	less than 32K RAM
	STA	RAM
	LDA	$A000
	COM	$A000
	CMPA	$A000
	BEQ	TSTING	32K RAM
	INC	AMNT2,PCR
	LDX	#$FF00
	STX	ADDR,PCR
	BSR	TMPVAL
	STA	RAM
	BRA	TST2

TSTING	BSR	TMPVAL
TST2	LDX	#$0	Test from $0000-$0DFF
	LEAY	TABLE1,PCR
A@	LDA	,X
	LDB	#3
	STA	TMP,PCR
B@	LDA	B,Y
	STA	,X
	LDA	,X
	CMPA	B,Y
	BNE	ERR
	DECB
	BPL	B@
	LDA	TMP,PCR
	STA	,X+
	CMPX	#$E00
	BNE	A@

	LDX	#$F00	Test from $0F00-$FEFF
A@	LDA	,X
	LDB	#3
	STA	TMP,PCR
B@	LDA	B,Y
	STA	,X
	LDA	,X
	CMPA	B,Y
	BNE	ERR
	DECB
	BPL	B@
	LDA	TMP,PCR
	STA	,X+
	CMPX	ADDR,PCR
	BNE	A@
	BRA	OK

TMPVAL	STA	ROM	Just 32K RAM so go back to ROM
	LEAX	MSG2-1,PCR
	LBSR	PRINT
	LEAX	AMNT-1,PCR
	LDA	#5
	LDB	AMNT2,PCR
	MUL
	LEAX	D,X
	LBRA	PRINT

ERR	STA	ROM
	STX	LOC
	LEAX	ERRMSG-1,PCR
	LBSR	PRINT
	LDD	LOC,PCR
	LBSR	NUMBR
	BRA	EXIT
	
OK	STA	ROM
	LEAX	OKMSG-1,PCR
OK2	LBSR	PRINT
EXIT	LBSR	$ADFB
	STA	SLOWC1
	ANDCC	#$AF
	LBRA	$A027

ADDR	RMB	2
TMP	RMB	1
LOC	RMB	2
MEMTBL	FDB	$1000,$4000,$8000
TABLE1	FCB	0,$FF,%10101010,%01010101
MSGA	FCC	/OK, YOU HAVE A COCO1 OR 2/
	FCB	$0D,0
MSGB	FCC	/OK, You have a Coco3/
	FCB	$0D,0
NOTYET	FCC	/Sorry this is not yet ready!/
	FCB	$0D,0
MSGC	FCC	/WHAT DO YOU WANT TO TEST?/
	FCB	$0D
	FCC	/  1) MEMORY/
	FCB	$0D
	FCC	/  2) SOUND/
	FCB	$0D
	FCC	/  3) JOYSTICKS/
	FCB	$0D
	FCC	/ENTER (1-3)/
	FCB	$0D,0
	
MSG2	FCC	/YOU SEEM TO HAVE/
	FCB	$0D,0
AMNT2	FCB	0
AMNT	RMB	5
	FCC	/04K/	*3
	FCB	$0D,0	*2
	FCC	/16K/
	FCB	$0D,0
	FCC	/32K/
	FCB	$0D,0
	FCC	/64K/
	FCB	$0D,0
MSG1	FCC	/TESTING MEMORY/
	FCB	$0D,0
ERRMSG	FCC	/AN ERROR OCCURED AT /
	FCB	0
OKMSG	FCC	/NO ERRORS IN MEMORY/
	FCB	$0D,0
PC1E	EQU	*



COCO3	LEAX	CC3,PCR
	LDY	#$7000
A@	LDD	,X++
	STD	,Y++
	CMPX	#PC3E
	BLO	A@
	LBRA	$7000

CC3	STA	FASTC3
	STA	RAM
	CLR	$E6		TELL BASIC IT'S TEXT
	LDD	$FFB0
	STD	COLORS,PCR
G@	LBSR	WDTH80		AND WIDTH40
	LEAX	TEST-1,PCR	POINT TO MESSAGE
	LBSR	PRINT		PRINT IT
	LBSR	MEMTST		Rough test of memory
	DECA
	STA	TOTRAM,PCR
	STA	MAXRAM,PCR
	LBSR	$ADFB
	LEAX	READY-1,PCR
	LBSR	PRINT
	LDA	#%01000100	SET COCO3 TYPE MODE; FEXX NOT CNST
	STA	$FF90		TELL COCO
* WE ARE NOW READY TO ENGAGE EXTRA MEMORY BUT KEEP TEXT SCREEN
* IN VIEW. THIS MEANS WE NEED TO SET EXTRA BITS FOR CPU MEM NOT
* EXTRA BITS FOR VID MEM. I ASSUMED THAT WE ARE FULL 8 MEG VIDEO
* AND BITS 0 & 1 AFFECT CPU ONLY DURING AN MMU WRITE BUT VIDEO
* ALL THE TIME.

	LDA	#$39
	STA	MMU-1
	LBSR	GETTBL		LOAD A WITH VALUE FOR EXTRA MEM.
	CLRB
	STB	MMUIMG,PCR	SAVE VALUE
A@	STA	EXTRCP		TELL THE CPU
	STB	MMU		TELL COCO
	CLRA			Fill with $00
	BSR	FILL
	COMA			Fill with $FF
	BSR	FILL
	LDA	#%10101010	pattern
	BSR	FILL
	COMA			%01010101
	BSR	FILL
	LDA	TOTRAM,PCR
	CMPA	#3		1Meg
	BHI	B@
	CMPA	#2		512K
	BLO	B@
	LDA	MMUIMG,PCR
	CMPA	#$35
	BNE	B@
	LDA	#$3F
	STA	MMUIMG,PCR
B@	LBSR	GETTBL
	CMPB	MMUIMG,PCR
	BNE	C@
	TST	EXIMG,PCR
	BEQ	DONE
	DEC	TOTRAM,PCR
	LBSR	GETTBL
	CLR	MMUIMG
	BRA	D@
C@	INC	MMUIMG,PCR
D@	LDB	MMUIMG,PCR
	STB	$FF9A		FLIP BORDER COLOR
	BRA	A@

DONE	LDD	COLORS,PCR
	STD	$FFB0
	CLR	EXTRCP
	LDA	#$3A		RESET MMU BLOCK
	STA	MMU
	LEAX	GOOD-1,PCR
	LBSR	PRINT
	LBSR	PAUSE
*	LDA	#%1110110
*	STA	$FF90
	LBRA	$8C1B

FILL	STS	STACK
	LDS	#$6000
	TFR	A,B
	TFR	D,X
	TFR	X,Y
	TFR	X,U
A@	PSHS	D,X,Y,U
	CMPS	#PAGRAM
	BNE	A@
	LDS	STACK
	LDX	#PAGRAM
B@	CMPA	,X+
	BNE	C@
	CMPX	#$6000
	BNE	B@
	RTS
C@	LEAS	2,S
	BRA	ERROR


GETTBL	PSHS	X
	LEAX	TABLE3,PCR
	LDB	TOTRAM,PCR
	LSLB
	LDD	B,X
	STA	EXIMG,PCR
	STB	MASK,PCR
	PULS	X,PC

ERROR	LEAX	-1,X
	STX	BADMEM,PCR
	LDD	#$3A
	STA	EXTRCP
	STB	MMU
	ANDCC	#$AF
	LEAX	BAD-1,PCR
	LBSR	PRINT
	CLRA
	LDB	EXIMG,PCR
	LBSR	DECMAL
	BSR	PRNTAB
	CLRA
	LDB	MMUIMG,PCR
	LBSR	DECMAL
	BSR	PRNTAB
	LDD	BADMEM,PCR
	LBRA	DECMAL

PRNTAB	LEAX	TAB-1,PCR
	LBRA	PRINT

MEMTST	ORCC	#$50
	LDX	#'M*256+'T	Unlikely data
	LDY	#0
	LDD	#$39
	STA	EXTRCP
	STB	MMU-1
	STY	IMG
	LDA	#9
	STA	MMU-1
	STX	IMG
	STB	MMU-1
	CMPX	IMG
	BEQ	M128
	LDA	#$79
	STA	MMU-1
	STX	IMG
	STB	MMU-1
	CMPX	IMG
	BEQ	M512
	LDA	#$B9
	STA	MMU-1
	STX	IMG
	STB	MMU-1
	CMPX	IMG
	BEQ	M1M
	LDA	#%10000
	STA	EXTRCP
	STB	MMU-1
	STX	IMG
	CLR	EXTRCP
	STB	MMU-1
	CMPX	IMG
	BEQ	M2M
	LDA	#%100000
	STA	EXTRCP
	STB	MMU-1
	STX	IMG
	CLR	EXTRCP
	STB	MMU-1
	CMPX	IMG,PCR
	BEQ	M4M
	LDA	#%110000
	STA	EXTRCP
	STB	MMU-1
	STX	IMG,PCR
	CLR	EXTRCP
	STB	MMU-1
	CMPX	IMG

	BEQ	M6M
M8M	LDA	#7
	BRA	SHOW
M128	LDA	#1
	BRA	SHOW
M512	LDA	#2
	BRA	SHOW
M1M	LDA	#3
	BRA	SHOW
M2M	LDA	#4
	BRA	SHOW
M4M	LDA	#5
	BRA	SHOW
M6M	LDA	#6

SHOW	ANDCC	#$AF	Start interrupts
	LEAX	SZ-1,PCR
	PSHS	A
	LBSR	PRINT
	LDA	,S
	DECA
	LDB	#5
	MUL
	LEAX	K128-1,PCR
	ABX
	LDA	CURSOR
	ORA	#$80
	STA	CURSOR
	LBSR	PRINT
	LDA	CURSOR
	ANDA	#$7F
	STA	CURSOR
	LEAX	SZ2-1,PCR
	LBSR	PRINT
	CLRA
	PULS	A,PC

* DATA BYTES
MMUIMG	RMB	1
BAS512	RMB	1
STOP	RMB	1
EXIMG	RMB	1
MAXRAM	RMB	1
TBPTR	RMB	1
BADMEM	RMB	2
COLORS	RMB	2
CPU	RMB	1	$FF=M6809 0=HD6309
STACK	RMB	2

TEST	FCC	/MEMORY TEST/
	FCB	$0D
	FCC	/Doing a quick test for memory, please wait../
	FDB	$D00

SZ	FCC	/There seems to be /
	FCB	0
K128	FCC	/128K/
	FCB	0
	FCC	/512K/
	FCB	0
	FCC	/1MEG/
	FCB	0
	FCC	/2MEG/
	FCB	0
	FCC	/4MEG/
	FCB	0
	FCC	/6MEG/
	FCB	0
	FCC	/8MEG/
	FCB	0
SZ2	FCC	/ of memory. If not correct hit RESET to quit./
	FCB	$0D
	FCC	/Hit any other key to continue./
	FDB	$D00

READY	FCB	$0D
	FCC	/Now writing $00,$55,$AA, and $FF to memory./
	fcb	$0d
	FCC	/Errors will be reported when finished; 5min or less./
	fcb	$0d
	fcc	/Border color will change after each $2000 RAM test./
	fcb	$0d,$0d,0

GOOD	FCC	/YAHOO!!! No errors found!/
	fcb	$0d
	fcc	/Exit with RESET!/
	FDB	$D00
BAD	FCC	/OOOPS!? Terminated with error at:/
	FCB	$0D
	FCC	/EXTRA BITS,  MMU BLOCK,           BYTE/
	fcb	$0d
	fcc	/Exit with any key./
	FDB	$D00

TAB	FCC	/                /
	FCB	0


TABLE3	FCB	0,5		* 128K
	FCB	0,$35		* 512K
	FCB	0,$7F		* 1M
	FCB	0,$FF		* 2M
	FCB	%00010000,$FF	* 4M
	FCB	%00100000,$FF	* 6M
	FCB	%00110000,$FF	* 8M

TOTRAM	RMB	1
MASK	RMB	1
PC3E	EQU	*

	END	SECTION
